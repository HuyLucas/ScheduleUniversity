<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1.0"
    />
    <title>Tạo lịch học trong thời khóa biểu</title>
    <link
      rel="stylesheet"
      href="/css/timetableindex.css"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css"
    />
  </head>
  <body>
    <div class="container">
      <div class="form-group">
        <label for="classes">Tên lớp:</label>
        <input
          type="text"
          name="classes"
          class="input-field"
        />
      </div>
      <div class="form-group">
        <label for="room">Số phòng học:</label>
        <input
          type="text"
          name="room"
          class="input-field"
        />
      </div>
      <div class="form-group">
        <label for="timestart">Thời gian bắt đầu:</label>
        <input
          type="text"
          name="timestart"
          class="input-field flatpickr"
          data-enable-time="false"
          data-date-format="Y-m-d H:i:S"
        />
      </div>
      <div class="form-group">
        <label for="timeend">Thời gian kết thúc:</label>
        <input
          type="text"
          name="timeend"
          class="input-field flatpickr"
          data-enable-time="false"
          data-date-format="Y-m-d H:i:S"
        />
      </div>
      <div class="form-group">
        <label for="lecturer">Giáo viên:</label>
        <select
          name="id_lecturer"
          class="input-field"
          id="lecturerSelect"
        >
          <option value="">Chọn giáo viên</option>
        </select>
      </div>
      <button
        type="button"
        id="customButton"
        class="btn btn-submit"
      >
        Go
      </button>

      <div
        id="timetable-columns"
        style="display: flex; overflow-x: auto"
      ></div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script>
      flatpickr('.flatpickr', {});
      async function populateTeachers() {
        try {
          console.log('populateTeachers');
          const response = await fetch('/lecturelistjson'); // Đường dẫn xử lý query
          const teachers = await response.json();

          const select = document.querySelector('select[name="id_lecturer"]');
          select.innerHTML = '<option value="">Chọn giáo viên</option>';
          teachers.data.forEach((teacher) => {
            const option = document.createElement('option');
            option.value = teacher.id;
            option.textContent = teacher.firstname + ' ' + teacher.lastname;
            select.appendChild(option);
          });
        } catch (error) {
          console.log(error);
        }
      }
      populateTeachers();
      const customButton = document.getElementById('customButton');

      customButton.addEventListener('click', async () => {
        // Thực hiện các thao tác khi nút được nhấn
        console.log('Nút đã được nhấn');
        const timestart = document.querySelector('input[name="timestart"]').value;
        const timeend = document.querySelector('input[name="timeend"]').value;

        // Gửi yêu cầu GET với tham số timestart và timeend lên server
        const response = await fetch(
          `/timetableindexget?timestart=${timestart}&timeend=${timeend}`,
        );
        const data = await response.json();

        // Hiển thị kết quả trả về vào #timetable-columns
        const timetableColumns = document.getElementById('timetable-columns');
        timetableColumns.innerHTML = ''; // Xóa nội dung cũ trước khi thêm mới
        const daysOfWeek = [
          'Chủ Nhật',
          'Thứ Hai',
          'Thứ Ba',
          'Thứ Tư',
          'Thứ Năm',
          'Thứ Sáu',
          'Thứ Bảy',
        ];
        const timetableByDate = new Map();
        // Tạo cột và hiển thị kết quả
        // data.results.forEach((item) => {
        //   const dateTimeStart = new Date(item.timestart);
        //   const dayOfWeek = daysOfWeek[dateTimeStart.getDay()]; // Lấy tên thứ
        //   // Tạo phần tử cột cho từng mục kết quả
        //   const column = document.createElement('div');
        //   column.className = 'timetable-column';
        //   timetableColumns.appendChild(column);

        //   // Hiển thị thông tin lịch học vào cột
        //   const entry = document.createElement('div');
        //   entry.className = 'timetable-entry';
        //   entry.innerHTML = `Bắt đầu: <br/>
        //                       ${dayOfWeek} <br/>
        //                       ${item.timestart}<br/>
        //                       Kết thúc:<br/> ${item.timeend}<br/>
        //                       Môn: ${item.subject}<br/>
        //                       Lớp: ${item.classes}<br/>
        //                       Phòng: ${item.room}<br/>
        //                       GV: ${item.lecturer}<br/>`;
        //   column.appendChild(entry);
        // });
        data.results.forEach((item) => {
          const dateTimeStart = new Date(item.timestart);
          const date = dateTimeStart.toDateString(); // Lấy ngày trong chuỗi định dạng

          // Kiểm tra xem ngày đã tồn tại trong Map chưa
          if (!timetableByDate.has(date)) {
            timetableByDate.set(date, []);
          }

          timetableByDate.get(date).push(item);
        });

        timetableByDate.forEach((items, date) => {
          // Tạo cột cho từng ngày
          const column = document.createElement('div');
          column.className = 'timetable-column';
          timetableColumns.appendChild(column);

          // Hiển thị ngày
          const columnHeader = document.createElement('div');
          columnHeader.className = 'column-header';
          columnHeader.textContent = date;
          column.appendChild(columnHeader);

          // Hiển thị thông tin lịch học cho từng môn
          items.forEach((item) => {
            const entry = document.createElement('div');
            entry.className = 'timetable-entry';
            entry.innerHTML = `Bắt đầu: <br/> ${item.timestart}<br/>
                              Kết thúc:<br/> ${item.timeend}<br/>
                              Môn: ${item.subject}<br/>
                              Lớp: ${item.classes}<br/>
                              Phòng: ${item.room}<br/>
                              GV: ${item.lecturer}<br/>`;
            column.appendChild(entry);
          });
        });
      });
    </script>
  </body>
</html>
